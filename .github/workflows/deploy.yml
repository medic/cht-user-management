name: Deploy

on:
  workflow_run:
    workflows: [Docker build and publish]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: "Configure"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          aws-access-key-id: ${{ secrets.DEPLOY_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_ACCESS_KEY }}

      - name: install oathtool
        run: sudo apt-get install -y oathtool jq

      - id: auth
        name: Authenticate to STS
        run: |
          mfa_serial="arn:aws:iam::${{vars.AWS_ACCOUNT_NUMBER}}:mfa/${{vars.MFA_ID}}"
          mfa_code=$(oathtool -b --totp ${{secrets.MFA_KEY}})
          STS=$(aws sts get-session-token --region "${{vars.AWS_REGION}}" --serial-number "$mfa_serial" --token-code "$mfa_code")

          aws_access_key_id=$(echo "$STS" | jq -r '.Credentials.AccessKeyId')
          echo "::add-mask::$aws_access_key_id"
          aws_secret_access_key=$(echo "$STS" | jq -r '.Credentials.SecretAccessKey') 
          echo "::add-mask::$aws_secret_access_key"
          aws_session_token=$(echo "$STS" | jq -r '.Credentials.SessionToken') 
          echo "::add-mask::$aws_session_token"

          echo "AWS_ACCESS_KEY_ID=$aws_access_key_id" >> "$GITHUB_OUTPUT"
          echo "AWS_SECRET_ACCESS_KEY=$aws_secret_access_key" >> "$GITHUB_OUTPUT"
          echo "AWS_SESSION_TOKEN=$aws_session_token" >> "$GITHUB_OUTPUT"

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          aws-access-key-id: ${{ steps.auth.outputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ steps.auth.outputs.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ steps.auth.outputs.AWS_SESSION_TOKEN }}
          role-skip-session-tagging: true
          role-to-assume: "arn:aws:iam::${{vars.AWS_ACCOUNT_NUMBER}}:role/eks-${{vars.AWS_USER}}"

      - uses: actions/checkout@v2

      - name: Install SOPS
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64 -O sops
          chmod +x sops
          sudo mv sops /usr/local/bin/

      - name: Setup SOPS key
        run: |
          echo "${{ secrets.SOPS_PRIVATE_KEY }}" > key.txt
          chmod 600 key.txt
          export SOPS_AGE_KEY_FILE=$(pwd)/key.txt

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{vars.CLUSTER}} --region ${{vars.AWS_REGION}}
          helm repo add medic https://docs.communityhealthtoolkit.org/helm-charts

      - name: Deploy chis-civ
        uses: ./.github/workflows/deploy-config.yml
        with:
          config: chis-civ
          namespace: ${{vars.NAMESPACE}}

      - name: Deploy chis-tg
        uses: ./.github/workflows/deploy-config.yml
        with:
          config: chis-tg
          namespace: ${{vars.NAMESPACE}}

      - name: Deploy chis-ke
        uses: ./.github/workflows/deploy-config.yml
        with:
          config: chis-ke
          namespace: ${{vars.NAMESPACE}}

      - name: Deploy chis-ml
        uses: ./.github/workflows/deploy-config.yml
        with:
          config: chis-ml
          namespace: ${{vars.NAMESPACE}}

      - name: Cleanup
        run: rm key.txt
