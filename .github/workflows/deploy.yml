name: Deploy

on:
  # workflow_run:
  #   workflows: [Docker build and publish]
  #   types:
  #     - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: "Configure"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          aws-access-key-id: ${{ secrets.DEPLOY_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_ACCESS_KEY }}

      - name: install oathtool
        run: sudo apt-get install -y oathtool jq

      - name: Authenticate to STS
        run: |
          mfa_serial="arn:aws:iam::${{vars.AWS_ACCOUNT_NUMBER}}:mfa/gh-action"
          mfa_code=$(oathtool -b --totp ${{secrets.MFA_KEY}})
          STS=$(aws sts get-session-token --region "${{vars.AWS_REGION}}" --serial-number "$mfa_serial" --token-code "$mfa_code")
          eval `echo $STS | (jq -r '"AWS_ACCESS_KEY_ID="+.Credentials.AccessKeyId,"AWS_SECRET_ACCESS_KEY="+.Credentials.SecretAccessKey,"AWS_SESSION_TOKEN="+.Credentials.SessionToken' >> $GITHUB_ENV)`

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-skip-session-tagging: true
          role-to-assume: "arn:aws:iam::${{vars.AWS_ACCOUNT_NUMBER}}:role/eks-${{vars.AWS_USER}}"

      - uses: actions/checkout@v2

      - name: Helm upgrade
        run: |
          aws eks update-kubeconfig --name ${{vars.CLUSTER}} --region ${{vars.AWS_REGION}}
          helm repo add medic https://docs.communityhealthtoolkit.org/helm-charts
          helm upgrade  --namespace ${{vars.NAMESPACE}} --values scripts/deploy/values/users-chis-civ.yaml users-chis-civ medic/cht-user-management
